// Script para verificar la estructura de la base de datos
const { createClient } = require('@supabase/supabase-js')

// Configuraci√≥n
const supabaseUrl = process.env.SUPABASE_URL
const supabaseKey = process.env.SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables de entorno faltantes:')
  console.error('   - SUPABASE_URL:', supabaseUrl ? '‚úÖ' : '‚ùå')
  console.error('   - SUPABASE_ANON_KEY:', supabaseKey ? '‚úÖ' : '‚ùå')
  console.error('\nüí° Aseg√∫rate de tener configurado el archivo .env.local')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function verifyDatabase() {
  console.log('üîç Verificando estructura de base de datos...\n')

  try {
    // Verificar tabla transacciones
    console.log('üìä Verificando tabla "transacciones":')
    const { data: transactions, error: transError } = await supabase
      .from('transacciones')
      .select('*')
      .limit(1)

    if (transError) {
      console.error('‚ùå Error en tabla transacciones:', transError.message)
      
      // Verificar posibles c√≥digos de error
      if (transError.code === '42P01') {
        console.error('   La tabla "transacciones" no existe')
      } else if (transError.code === '42501') {
        console.error('   Sin permisos para acceder a la tabla')
      }
    } else {
      console.log('‚úÖ Tabla transacciones existe')
      if (transactions && transactions.length > 0) {
        console.log('üìã Estructura de columnas:')
        Object.keys(transactions[0]).forEach(column => {
          console.log(`   - ${column}: ${typeof transactions[0][column]}`)
        })
      } else {
        console.log('   (No hay datos para mostrar estructura)')
      }
    }

    console.log('\nüìä Verificando tabla "presupuestos":')
    const { data: budgets, error: budgetError } = await supabase
      .from('presupuestos')
      .select('*')
      .limit(1)

    if (budgetError) {
      console.error('‚ùå Error en tabla presupuestos:', budgetError.message)
    } else {
      console.log('‚úÖ Tabla presupuestos existe')
      if (budgets && budgets.length > 0) {
        console.log('üìã Estructura de columnas:')
        Object.keys(budgets[0]).forEach(column => {
          console.log(`   - ${column}: ${typeof budgets[0][column]}`)
        })
      } else {
        console.log('   (No hay datos para mostrar estructura)')
      }
    }

    // Verificar autenticaci√≥n
    console.log('\nüîê Verificando sistema de autenticaci√≥n:')
    const { data: { user }, error: authError } = await supabase.auth.getUser()
    
    if (authError) {
      console.log('‚ÑπÔ∏è  No hay usuario autenticado (esperado en script)')
    } else if (user) {
      console.log('‚úÖ Sistema de autenticaci√≥n funcionando')
      console.log(`   Usuario: ${user.email}`)
    }

  } catch (error) {
    console.error('‚ùå Error general:', error.message)
  }
}

// Ejecutar verificaci√≥n
verifyDatabase()
  .then(() => {
    console.log('\n‚úÖ Verificaci√≥n completada')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\n‚ùå Error durante la verificaci√≥n:', error)
    process.exit(1)
  })

module.exports = { verifyDatabase } 